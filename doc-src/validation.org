#+STARTUP: inlineimages header
#+PROPERTY: header-args :cache yes :exports both

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://unpkg.com/purecss@2.0.3/build/pure-min.css" integrity="sha384-cg6SkqEOCV1NbJoCu11+bm0NvBRc8IYLRGXkmNrqUBfTjmMYwNKPWBTIKyw9mHNJ" crossorigin="anonymous"/>
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="public/css/criterium.css" />

#+begin_src clojure :results value silent
(require 'criterium)
(require '[criterium
           [chart :as chart]
           [jvm :as jvm]
           [measured :as measured]
           [pipeline :as pipeline]
           [platform :as platform]
           [toolkit :as toolkit]])
#+end_src


* System NanoTime

See https://shipilev.net/blog/2014/nanotrusting-nanotime/, which proves
LMH code for the below.

** latency

Test nanotime latency

#+begin_src clojure :results file graphics :dir "doc-src/data/images" :file "nanotime-latency.png" :var dir=(concat (file-name-directory (buffer-file-name)) "data/images/")
(chart/spit
 (chart/time-histogram
  (platform/nanotime-latency
   {:analysis     [{:analysis-type :samples}
                   {:analysis-type :stats}]
    :limit-time-s 10})
  {:title "nanoTime Latency"})
 "doc-src/data/images/nanotime-latency.png")
#+end_src

#+RESULTS:
[[file:data/images/nanotime-latency.png]]


We see that this reports around 31ns.

** granularity

Test nanotime granularity

#+begin_src clojure  :results file graphics :dir "doc-src/data/images" :file "nanotime-granularity.png" :var dir=(concat (file-name-directory (buffer-file-name)) "data/images/")
(chart/spit
 (chart/time-histogram
  (platform/nanotime-granularity
   {:analysis     [{:analysis-type :samples}
                   {:analysis-type :stats}]
    :limit-time-s 10})
  {:title "nanoTime Granularity"})
 "doc-src/data/images/nanotime-granularity.png")
#+end_src

#+RESULTS:
[[file:data/images/nanotime-granularity.png]]

We see that this reports around 31ns, or about the same as latency.
Interestingly there seems to be a hard limit to the lower bound, which
is not seen in the latency.

* Time
** Zero accuracy and resolution

The smallest thing criterium can measure is a constant, which is
evaluated inside the identity function.


Lets look at a histogram of the distribution

#+begin_src clojure :results file graphics :dir "doc-src/data/images" :file "constant.png" :var dir=(concat (file-name-directory (buffer-file-name)) "data/images/")
(chart/spit
 (chart/time-histogram
  (platform/constant-bench
   {:analysis [{:analysis-type :samples}
               {:analysis-type :stats}]})
  {:title "Constant"})
 (str "doc-src/data/images/constant.png"))
#+end_src

#+RESULTS:
[[file:data/images/constant.png]]

Gives a mean around 1ns.
